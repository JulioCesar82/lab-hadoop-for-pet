#!/bin/bash
# NÃ£o era para existir

#loading envvars
#for auto load in binderhub:
source ~/.profile
#for manual start: run 
#source $(pwd)/.bashrc 

#Starting sshd server
/usr/sbin/sshd -f ~/resources/configs/ssh/sshd_config 

# Adding names to know hosts. This step avoids yes/no host confirmation.
ssh -o "StrictHostKeyChecking no" $USER@localhost -p 8822 -C "exit" 
ssh -o "StrictHostKeyChecking no" $USER@0.0.0.0   -p 8822 -C "exit"

# Copying configurations files to the Hadoop folder 
cp ~/resources/configs/hadoop/${HADOOP_VERSION}/core-site.xml ${HADOOP_HOME}/etc/hadoop/ 
cp ~/resources/configs/hadoop/${HADOOP_VERSION}/hdfs-site.xml ${HADOOP_HOME}/etc/hadoop/

# Formatting the filesystem
hdfs namenode -format -force -nonInteractive >> /dev/null

start-dfs.sh                                                                                
#Copying YARN configurations for Pseudo-Distributed Mode
cp ~/resources/configs/hadoop/${HADOOP_VERSION}/mapred-site.xml ${HADOOP_HOME}/etc/hadoop/  
cp ~/resources/configs/hadoop/${HADOOP_VERSION}/yarn-site.xml   ${HADOOP_HOME}/etc/hadoop/  

start-yarn.sh                                                                               

hdfs dfs -mkdir -p /user/$USER

# Wait for NameNode process to start
echo "Waiting for NameNode process to start..."
while ! jps | grep -q NameNode; do
    echo "NameNode process not found, waiting..."
    sleep 2
done
echo "NameNode process started."

# Wait for NameNode port 9000 to open
echo "Waiting for NameNode port 9000 to open..."
while ! netstat -tuln | grep -q ':9000'; do
    echo "Port 9000 is not open yet, waiting..."
    sleep 2
done
echo "NameNode port 9000 is open."

# Wait for HDFS to exit safe mode
echo "Waiting for HDFS to exit safe mode..."
until hdfs dfsadmin -safemode get | grep -q "Safe mode is OFF"; do
    echo "HDFS still in safe mode, waiting..."
    sleep 5
done
echo "HDFS is ready!"
