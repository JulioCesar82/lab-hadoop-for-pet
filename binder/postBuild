#!/bin/bash

###############################################################
#          jupyter/jupyterlab extensions/kernels              #
###############################################################

# sos installation
python -m sos_notebook.install
jupyter labextension install jupyterlab-sos --no-build 

# Beaker installation and extension
beakerx install
jupyter labextension install @jupyter-widgets/jupyterlab-manager --no-build 
jupyter labextension install beakerx-jupyterlab --no-build 

# Table of contents Jupyter Lab Extension
jupyter labextension install @jupyterlab/toc --no-build 

# Jupyter/Jupyterlab extension for proxying internal applications
jupyter serverextension enable --sys-prefix jupyter_server_proxy
jupyter labextension install jupyterlab-server-proxy

# Building everything up
jupyter lab build --dev




###############################################################
#             hadoop related commands                         #
###############################################################

export HADOOP_VERSION=2.9.2
export HADOOP_PATH=$(pwd)/hadoop-2.9.2

wget http://ftp.unicamp.br/pub/apache/hadoop/common/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}.tar.gz -q 
tar -xvf hadoop-${HADOOP_VERSION}.tar.gz >/dev/null 
rm       hadoop-${HADOOP_VERSION}.tar.gz

export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
echo "export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 " >> ~/.bashrc
echo "export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 " >> ${HADOOP_PATH}/etc/hadoop/hadoop-env.sh

echo "export HADOOP_VERSION=${HADOOP_VERSION}" >> ~/.bashrc
echo "export HADOOP_PATH=${HADOOP_PATH}"       >> ~/.bashrc
echo "export PATH=\$PATH:\$HADOOP_PATH/bin"      >> ~/.bashrc
echo "export PATH=\$PATH:\$HADOOP_PATH/sbin"     >> ~/.bashrc


# creating ssh-related folders
mkdir .ssh/etc/ssh -p

# setup passphraseless ssh (forcing the adding to know hosts)
ssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa  &&   cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys && chmod 0600 ~/.ssh/authorized_keys 

# generating keys for sshd server
ssh-keygen -A -f .ssh 
chmod 600 .ssh/etc/ssh/* -R

# hadoop 3.*.*
echo "export PDSH_RCMD_TYPE=ssh" >> ~/.bashrc

# Adding names to know hosts
#Commands below stablish ssh connections to used host names/ips. This step avoids yes/no host confirmation.
ssh -o "StrictHostKeyChecking no" $USER@localhost -p 8822 -C "exit" 
ssh -o "StrictHostKeyChecking no" $USER@0.0.0.0   -p 8822 -C "exit"

# Adding ssh options to Hadoop via envvar
#  connecting in a diferent port (-p 8822)
#  avoiding host key checking (-o StrictHostKeyChecking=no)
export HADOOP_SSH_OPTS="-o StrictHostKeyChecking=no -p 8822"
echo "export HADOOP_SSH_OPTS=\"-o StrictHostKeyChecking=no -p 8822\"" >> ~/.bashrc
export PDSH_RCMD_TYPE=ssh
echo "export PDSH_RCMD_TYPE=ssh" >> ~/.bashrc

# Copying configurations files to Hadoop folder 
cp $(pwd)/resources/configs/hadoop/${HADOOP_VERSION}/core-site.xml   ${HADOOP_PATH}/etc/hadoop/
cp $(pwd)/resources/configs/hadoop/${HADOOP_VERSION}/hdfs-site.xml   ${HADOOP_PATH}/etc/hadoop/

#Copying YARN configurations for Pseudo-Distributed Mode
cp $(pwd)/resources/configs/hadoop/${HADOOP_VERSION}/mapred-site.xml ${HADOOP_PATH}/etc/hadoop/
cp $(pwd)/resources/configs/hadoop/${HADOOP_VERSION}/yarn-site.xml   ${HADOOP_PATH}/etc/hadoop/
