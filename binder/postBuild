#!/bin/bash
# NÃ£o era para existir

###############################################################
#          jupyter/jupyterlab extensions/kernels              #
###############################################################

# Building everything up
echo "Building everything up (jupyter lab build)"
jupyter lab build 


###############################################################
#             moving to a local installation folder           #
###############################################################

mkdir ~/resources/local
cd    ~/resources/local



###############################################################
#             redis installation                              #
###############################################################

export REDIS_VERSION=6.0.5
echo "export REDIS_VERSION=${REDIS_VERSION}" >> ~/.bashrc
echo "export REDIS_VERSION=${REDIS_VERSION}" >> ~/.profile

export REDIS_HOME=$(pwd)/redis-${REDIS_VERSION}
echo "export REDIS_HOME=${REDIS_HOME}"       >> ~/.bashrc
echo "export REDIS_HOME=${REDIS_HOME}"       >> ~/.profile

       
wget http://download.redis.io/releases/redis-${REDIS_VERSION}.tar.gz -q && \
tar xvzf redis-${REDIS_VERSION}.tar.gz                                && \
rm       redis-${REDIS_VERSION}.tar.gz                                && \
cd       redis-${REDIS_VERSION}
make
# make test

mkdir bin
cp src/redis-server bin/
cp src/redis-cli bin/


###############################################################
#             postgresql commands                             #
###############################################################

# adding bin/ to $path
export POSTGRESQL_BIN_DIR=$(find /usr/lib/postgresql/ -type d -name "bin" | head -n 1)
echo "export POSTGRESQL_BIN_DIR=${POSTGRESQL_BIN_DIR}"       >> ~/.bashrc
echo "export POSTGRESQL_BIN_DIR=${POSTGRESQL_BIN_DIR}"       >> ~/.profile

echo "export PATH=\$PATH:\$POSTGRESQL_BIN_DIR"   >> ~/.bashrc
echo "export PATH=\$PATH:\$POSTGRESQL_BIN_DIR"   >> ~/.profile



# sos installation
# python -m sos_notebook.install
# jupyter labextension install jupyterlab-sos --no-build 

# Beaker installation and extension
beakerx install
# jupyter labextension install @jupyter-widgets/jupyterlab-manager
# jupyter labextension install beakerx-jupyterlab


# Table of contents Jupyter Lab Extension
echo "Table of contents Jupyter Lab extension install"
jupyter labextension install @jupyterlab/toc --no-build 


###############################################################
#             hadoop-related commands                         #
###############################################################

export HADOOP_VERSION=2.9.2
echo "export HADOOP_VERSION=${HADOOP_VERSION}" >> ~/.bashrc
echo "export HADOOP_VERSION=${HADOOP_VERSION}" >> ~/.profile

export HADOOP_HOME=$(pwd)/hadoop-${HADOOP_VERSION}
echo "export HADOOP_HOME=${HADOOP_HOME}"       >> ~/.bashrc
echo "export HADOOP_HOME=${HADOOP_HOME}"       >> ~/.profile

wget https://archive.apache.org/dist/hadoop/common/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}.tar.gz -q   && \
tar -xvf hadoop-${HADOOP_VERSION}.tar.gz >> /dev/null                                                             && \
rm       hadoop-${HADOOP_VERSION}.tar.gz              

export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
echo "export JAVA_HOME=${JAVA_HOME} " >> ~/.bashrc
echo "export JAVA_HOME=${JAVA_HOME} " >> ~/.profile
echo "export JAVA_HOME=${JAVA_HOME} " >> ${HADOOP_HOME}/etc/hadoop/hadoop-env.sh

# adding bin and sbin to $path
echo "export PATH=\$PATH:\$HADOOP_HOME/bin"  >> ~/.bashrc
echo "export PATH=\$PATH:\$HADOOP_HOME/bin"  >> ~/.profile
echo "export PATH=\$PATH:\$HADOOP_HOME/sbin" >> ~/.bashrc
echo "export PATH=\$PATH:\$HADOOP_HOME/sbin" >> ~/.profile

# creating ssh-related folders
mkdir ~/.ssh/etc/ssh -p

# setup passphraseless ssh (forcing the adding to know hosts)
ssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa  &&   cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys && chmod 0600 ~/.ssh/authorized_keys 

# generating keys for sshd server
ssh-keygen -A -f ~/.ssh 
chmod 600 ~/.ssh/etc/ssh/* -R

# hadoop 3.*.*
export PDSH_RCMD_TYPE=ssh
echo "export PDSH_RCMD_TYPE=ssh" >> ~/.bashrc
echo "export PDSH_RCMD_TYPE=ssh" >> ~/.profile

# Adding ssh options to Hadoop via envvar
# connecting in a diferent port (-p 8822)
# avoiding host key checking (-o StrictHostKeyChecking=no)
export HADOOP_SSH_OPTS="-o StrictHostKeyChecking=no -p 8822"
echo "export HADOOP_SSH_OPTS=\"-o StrictHostKeyChecking=no -p 8822\"" >> ~/.bashrc
echo "export HADOOP_SSH_OPTS=\"-o StrictHostKeyChecking=no -p 8822\"" >> ~/.profile




###############################################################
#               hive-related commands                         #
###############################################################

export HIVE_VERSION=2.3.9
echo "export HIVE_VERSION=${HIVE_VERSION}" >> ~/.bashrc
echo "export HIVE_VERSION=${HIVE_VERSION}" >> ~/.profile

export HIVE_HOME=$(pwd)/hive-${HIVE_VERSION}
echo "export HIVE_HOME=${HIVE_HOME}"       >> ~/.bashrc
echo "export HIVE_HOME=${HIVE_HOME}"       >> ~/.profile

wget https://downloads.apache.org/hive/hive-${HIVE_VERSION}/apache-hive-${HIVE_VERSION}-bin.tar.gz -q
tar -xvf apache-hive-${HIVE_VERSION}-bin.tar.gz >> /dev/null                                               
rm       apache-hive-${HIVE_VERSION}-bin.tar.gz                                                            
mv       apache-hive-${HIVE_VERSION}-bin        hive-${HIVE_VERSION}      

# adding bin and sbin to $path
echo "export PATH=\$PATH:\$HIVE_HOME/bin"  >> ~/.bashrc
echo "export PATH=\$PATH:\$HIVE_HOME/bin"  >> ~/.profile



###############################################################
#                 sqoop-related commands                      #
###############################################################

export SQOOP_VERSION=1.4.7
echo "export SQOOP_VERSION=${SQOOP_VERSION}" >> ~/.bashrc
echo "export SQOOP_VERSION=${SQOOP_VERSION}" >> ~/.profile

export SQOOP_HOME=$(pwd)/sqoop-${SQOOP_VERSION}
echo "export SQOOP_HOME=${SQOOP_HOME}"       >> ~/.bashrc
echo "export SQOOP_HOME=${SQOOP_HOME}"       >> ~/.profile

wget http://archive.apache.org/dist/sqoop/${SQOOP_VERSION}/sqoop-${SQOOP_VERSION}.bin__hadoop-2.6.0.tar.gz -q  && \
tar -xf sqoop-${SQOOP_VERSION}.bin__hadoop-2.6.0.tar.gz >> /dev/null                                             && \
rm      sqoop-${SQOOP_VERSION}.bin__hadoop-2.6.0.tar.gz                                                          && \
mv      sqoop-${SQOOP_VERSION}.bin__hadoop-2.6.0        sqoop-${SQOOP_VERSION} 

# adding bin/ to $path
echo "export PATH=\$PATH:\$SQOOP_HOME/bin"   >> ~/.bashrc
echo "export PATH=\$PATH:\$SQOOP_HOME/bin"   >> ~/.profile

# Download PostgreSQL JDBC driver
wget -q https://jdbc.postgresql.org/download/postgresql-42.2.5.jar -O postgresql-driver.jar
chmod 644 postgresql-driver.jar

# Copy driver to Sqoop and Hive lib directories
cp postgresql-driver.jar ${SQOOP_HOME}/lib/
cp postgresql-driver.jar ${HIVE_HOME}/lib/

# Add driver to Hadoop's classpath
export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:${HADOOP_HOME}/share/hadoop/common/lib/postgresql-driver.jar
echo "export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:${HADOOP_HOME}/share/hadoop/common/lib/postgresql-driver.jar" >> ~/.bashrc
echo "export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:${HADOOP_HOME}/share/hadoop/common/lib/postgresql-driver.jar" >> ~/.profile
mv postgresql-driver.jar ${HADOOP_HOME}/share/hadoop/common/lib/




###############################################################
#                 hbase-related commands                      #
###############################################################

export HBASE_VERSION=2.2.5
echo "export HBASE_VERSION=${HBASE_VERSION}" >> ~/.bashrc
echo "export HBASE_VERSION=${HBASE_VERSION}" >> ~/.profile

export HBASE_HOME=$(pwd)/hbase-${HBASE_VERSION}
echo "export HBASE_HOME=${HBASE_HOME}"       >> ~/.bashrc
echo "export HBASE_HOME=${HBASE_HOME}"       >> ~/.profile

#wget http://ftp.unicamp.br/pub/apache/hbase/${HBASE_VERSION}/hbase-${HBASE_VERSION}-bin.tar.gz -q
wget https://archive.apache.org/dist/hbase/${HBASE_VERSION}/hbase-${HBASE_VERSION}-bin.tar.gz -q
tar -xf hbase-${HBASE_VERSION}-bin.tar.gz    >> /dev/null                                         
rm      hbase-${HBASE_VERSION}-bin.tar.gz                    

# adding bin/ to $path
echo "export PATH=\$PATH:\$HBASE_HOME/bin"   >> ~/.bashrc
echo "export PATH=\$PATH:\$HBASE_HOME/bin"   >> ~/.profile




###############################################################
#                 flume-related commands                      #
###############################################################

export FLUME_VERSION=1.9.0
echo "export FLUME_VERSION=${FLUME_VERSION}" >> ~/.bashrc
echo "export FLUME_VERSION=${FLUME_VERSION}" >> ~/.profile

export FLUME_HOME=$(pwd)/flume-${FLUME_VERSION}
echo "export FLUME_HOME=${FLUME_HOME}"       >> ~/.bashrc
echo "export FLUME_HOME=${FLUME_HOME}"       >> ~/.profile

#wget http://ftp.unicamp.br/pub/apache/flume/${FLUME_VERSION}/apache-flume-${FLUME_VERSION}-bin.tar.gz -q && \
wget http://archive.apache.org/dist/flume/${FLUME_VERSION}/apache-flume-${FLUME_VERSION}-bin.tar.gz -q && \
tar -xf apache-flume-${FLUME_VERSION}-bin.tar.gz > /dev/null                                             && \
rm      apache-flume-1.9.0-bin.tar.gz                                                                    && \
mv      apache-flume-${FLUME_VERSION}-bin        flume-${FLUME_VERSION} 

# adding bin/ to $path
echo "export PATH=\$PATH:\$FLUME_HOME/bin"   >> ~/.bashrc
echo "export PATH=\$PATH:\$FLUME_HOME/bin"   >> ~/.profile




###############################################################
#             vscode installation commands                    #
###############################################################


export CODE_SERVER_VERSION=3.4.1
echo "export CODE_SERVER_VERSION=${CODE_SERVER_VERSION}" >> ~/.bashrc
echo "export CODE_SERVER_VERSION=${CODE_SERVER_VERSION}" >> ~/.profile

export CODE_SERVER_HOME=$(pwd)/code-server-${CODE_SERVER_VERSION}
echo "export CODE_SERVER_HOME=${CODE_SERVER_HOME}"       >> ~/.bashrc
echo "export CODE_SERVER_HOME=${CODE_SERVER_HOME}"       >> ~/.profile


# Download and install VS Code server
wget -q -O code-server.tar.gz https://github.com/cdr/code-server/releases/download/$CODE_SERVER_VERSION/code-server-$CODE_SERVER_VERSION-linux-x86_64.tar.gz                            
tar xzf code-server.tar.gz
mv code-server-${CODE_SERVER_VERSION}-linux-x86_64 code-server-$CODE_SERVER_VERSION
rm -rf code-server.tar.gz

# adding bin/ to $path
echo "export PATH=\$PATH:\$CODE_SERVER_HOME/bin"   >> ~/.bashrc
echo "export PATH=\$PATH:\$CODE_SERVER_HOME/bin"   >> ~/.profile

# adding extension servers 
echo "export SERVICE_URL=https://open-vsx.org/vscode/gallery"  >> ~/.bashrc
echo "export ITEM_URL=https://open-vsx.org/vscode/item"        >> ~/.profile


###############################################################
#             adding extensions folder to iPython            #
###############################################################

echo "export PYTHONPATH=~/.ipython/extensions:\$PYTHONPATH"        >> ~/.bashrc
echo "export PYTHONPATH=~/.ipython/extensions:\$PYTHONPATH"        >> ~/.profile
